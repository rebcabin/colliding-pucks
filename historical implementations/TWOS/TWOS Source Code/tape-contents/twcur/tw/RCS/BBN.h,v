head     1.6;
branch   ;
access   ;
symbols  TW2_7:1.6 TW2_6:1.6 TW2_5_1:1.6 TW2_5:1.5 TW2_4_2:1.4 TW2_4_1:1.2 TW2_4:1.1;
locks    ; strict;
comment  @ * @;


1.6
date     91.07.17.15.05.33;  author judy;  state Rel;
branches ;
next     1.5;

1.5
date     91.06.03.12.22.49;  author configtw;  state Rel;
branches ;
next     1.4;

1.4
date     90.12.12.10.05.24;  author configtw;  state Rel;
branches ;
next     1.3;

1.3
date     90.12.10.10.42.30;  author configtw;  state Dev;
branches ;
next     1.2;

1.2
date     90.08.12.21.55.02;  author steve;  state Exp;
branches ;
next     1.1;

1.1
date     90.08.07.15.37.30;  author configtw;  state Rel;
branches ;
next     ;


desc
@Butterfly includes
@


1.6
log
@New copyright notice.
@
text
@/*      Copyright (C) 1989, 1991, California Institute of Technology.
		U. S. Government Sponsorship under NASA Contract NAS7-918
		is acknowledged.        */

/*
 * $Log:	BBN.h,v $
 * Revision 1.5  91/06/03  12:22:49  configtw
 * Tab conversion.
 * 
 * Revision 1.4  90/12/12  10:05:24  configtw
 * fix a #if 0 bug
 * 
 * Revision 1.3  90/12/10  10:42:30  configtw
 * add comments for future TC2000 changes
 * 
 * Revision 1.2  90/08/12  21:55:02  steve
 * added MIN_NUM_BUFFS 16; reduces DEFAULT_NUM_BUFFS to 32
 * and MAX_NUM_BUFFS to 64.
 * 
 * Revision 1.1  90/08/07  15:37:30  configtw
 * Initial revision
 * 
*/
/* BBN.h Contains some of the required parameter for    */
/* the BBN implementations of the message system.       */


#define CP  (tw_num_nodes) 
#define ALL     -1
#define MAX_NODES       128
#define OK      1
#define DONE    1

typedef struct mstrct {

  int   *buf;   /* message buffer       */
  int   blen;
  int   mlen;
  int   dest;
  int   source;
  int   type;

 } MSG_STRUCT,  *MSG_STRUCT_PTR;

#ifdef BF_MACH


#if 0

#ifdef TC2000                   /* TC2000       */
#define MAX_NUM_BUFFS 256       
#define DEFAULT_NUM_BUFFS       64      
#define MIN_NUM_BUFFS   32
#else                           /* GP1000       */
#define MAX_NUM_BUFFS   64
#define DEFAULT_NUM_BUFFS       32
#define MIN_NUM_BUFFS   16

#endif TC2000

#endif

/* just use the following unless the TC2000 gets more memory */
#define MAX_NUM_BUFFS   64
#define DEFAULT_NUM_BUFFS       32
#define MIN_NUM_BUFFS   16

typedef struct Node_Arg_Str
{
   int num_nodes;
   char config_path[60];
   char stats_path[60];
   char stdout_path[60];
   double meg;
   int  num_buffs;
} Node_Arg_Str;
#endif


#define TIMER_EVENT     1
#define INTERRUPT_EVENT 2
#define COMMAND_EVENT   3
#define PROMPT_EVENT    4
#define END_EVENT       5
#define START_EVENT     6
#define MTIMER_EVENT    7
#ifdef DLM
#define DLM_EVENT       8
#endif DLM
#define NODE_READY_EVENT        9


#ifdef BF_PLUS
 OID  goid;
#endif

#ifdef BF_MACH

/* This data structure is used internally to maintain   */
/* the buffer pool.                                     */

typedef struct
{
	short int use_count;
	short int length;
	int src;
	int dest;
	int type;
	char data[];
}
	MESSAGE;

typedef int QUEUE_ITEM;

typedef struct
{
	QUEUE_ITEM *data;
	int size; /* number of items */
	int in;
	int out;
	short lock;
}
	FIFO_QUEUE;

#endif BF_MACH

@


1.5
log
@Tab conversion.
@
text
@d1 4
d6 4
a9 1
 * $Log:        BBN.h,v $
a23 4
/*      Copyright (C) 1989, California Institute of Technology.
		U. S. Government Sponsorship under NASA Contract NAS7-918
		is acknowledged.        */

@


1.4
log
@fix a #if 0 bug
@
text
@d2 4
a5 1
 * $Log:	BBN.h,v $
d17 3
a19 3
/*	Copyright (C) 1989, California Institute of Technology.
	U. S. Government Sponsorship under NASA Contract NAS7-918
	is acknowledged.	*/
d21 2
a22 2
/* BBN.h Contains some of the required parameter for  	*/
/* the BBN implementations of the message system.	*/
d25 5
a29 5
#define	CP  (tw_num_nodes) 
#define	ALL	-1
#define	MAX_NODES	128
#define	OK	1
#define DONE	1
d31 1
a31 1
typedef	struct mstrct {
d33 5
a37 5
  int	*buf;	/* message buffer	*/
  int	blen;
  int	mlen;
  int	dest;
  int	source;
d47 8
a54 8
#ifdef TC2000			/* TC2000	*/
#define MAX_NUM_BUFFS 256	
#define DEFAULT_NUM_BUFFS	64	
#define MIN_NUM_BUFFS	32
#else				/* GP1000	*/
#define MAX_NUM_BUFFS	64
#define DEFAULT_NUM_BUFFS	32
#define MIN_NUM_BUFFS	16
d61 3
a63 3
#define MAX_NUM_BUFFS	64
#define DEFAULT_NUM_BUFFS	32
#define MIN_NUM_BUFFS	16
d101 6
a106 6
    short int use_count;
    short int length;
    int src;
    int dest;
    int type;
    char data[];
d108 1
a108 1
    MESSAGE;
d114 5
a118 5
    QUEUE_ITEM *data;
    int size; /* number of items */
    int in;
    int out;
    short lock;
d120 1
a120 1
    FIFO_QUEUE;
@


1.3
log
@add comments for future TC2000 changes
@
text
@d3 3
d43 1
a48 1
#endif
a52 1
#if 0
d54 1
d56 5
@


1.2
log
@added MIN_NUM_BUFFS 16; reduces DEFAULT_NUM_BUFFS to 32
and MAX_NUM_BUFFS to 64.
@
text
@d3 4
d38 8
d49 4
@


1.1
log
@Initial revision
@
text
@d2 4
a5 1
 * $Log$
d34 3
a36 2
#define MAX_NUM_BUFFS	256
#define DEFAULT_NUM_BUFFS	64
@
